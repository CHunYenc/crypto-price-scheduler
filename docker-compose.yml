version: "3"

services:
  # db:
  #   image: postgres:latest
  #   container_name: postgres
  #   restart: always
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: example
  #     PGDATA: /var/lib/postgresql/data/pgdata
  #   volumes:
  #     - ./:/var/lib/postgresql/data/
  #   ports:
  #     - "5432:5432"
  
  redis:
    build: ./conf
    container_name: crypto-schedule-redis
    restart: always
    expose:
      - 6379

  backend:
    build: ./backend
    container_name: crypto-schedule-backend
    restart: always
    expose:
      - 8080
    # ports:
    #   - "8080:8080"
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    depends_on:
      # - db
      - redis

  # scheduler:
  #   build: ./scheduler
  #   container_name: flask-apscheduler
  #   restart: always
  #   expose:
  #     - 8081
  #   volumes:
  #     - ./scheduler:/app
  #   depends_on:
  #     - db
  #     - redis

  worker:
    build: ./backend
    command: celery -A celery_worker.celery worker --loglevel=info -B
    volumes:
      - ./backend:/app
      - ./logs/celery/:/app/logs/
    links:
        - redis

  nginx:
    image: nginx
    container_name: crypto-schedule-nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./logs/:/var/log/nginx/
      - ./conf/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend